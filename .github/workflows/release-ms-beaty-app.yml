on:
  push:
    branches: ["main"]

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install node modules
        run: yarn install --network-timeout 200000000

      - name: Build app
        run: yarn tauri:bundle

      - name: List files
        if: matrix.platform == 'ubuntu-20.04' || matrix.platform == 'macos-latest'
        run: |
          ls target/release/bundle/*

      - name: List files (windows)
        if: matrix.platform == 'windows-latest'
        run: |
          dir target\release\bundle
          dir target\release\bundle\*

      - name: Get version
        run: |
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Compress (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          cd target/release/bundle
          rm -f ms-beauty${{ env.PACKAGE_VERSION }}.tar.gz
          tar -czvf ms-beauty${{ env.PACKAGE_VERSION }}.tar.gz "macos/Ms Beauty.app"

      - name: Releasing artifacts (macos)
        if: matrix.platform == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/bundle/ms-beauty${{ env.PACKAGE_VERSION }}.tar.gz